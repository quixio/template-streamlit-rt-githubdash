services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.1
    command: |
      redpanda start
      --smp 1
      --overprovisioned
      --node-id 0
      --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      --rpc-addr redpanda:33145
      --advertise-rpc-addr redpanda:33145
      --mode dev-container
      --set auto_create_topics_enabled=true
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    entrypoint: /bin/sh
    command: |-
      -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - 8080:8080
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: >
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
  postgresdb:
    container_name: postgresdb
    build:
      context: "./Demo PostgreSQL Database"
      dockerfile: dockerfile
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
  streamlit_dash:
    container_name: streamlit_dash
    build:
      context: "./Streamlit Real-time API-based"
      dockerfile: dockerfile
    environment:
      API_URL: http://data_api:80/events
    ports:
      - "8083:80"
#  data_generator:
#    build:
#      context: "./User Actions Generator"
#      dockerfile: dockerfile
#    restart: always
#    environment:
#      output: generated-data
#      Quix__Broker__Address: redpanda:9092
#    depends_on:
#      - redpanda
#  aggegate_pages:
#    build:
#      context: "./Aggregate Page Views"
#      dockerfile: dockerfile
#    restart: always
#    environment:
#      input: generated_data
#      output: processed_data
#      Quix__Broker__Address: redpanda:9092
#    depends_on:
#      - redpanda
  github_firehose:
    build:
      context: "./Github Firehose Reader"
      dockerfile: dockerfile
    restart: always
    environment:
      output: github-data
      Quix__Broker__Address: redpanda:9092
    depends_on:
      - redpanda
  aggregate_events:
    build:
      context: "./Aggregate Github User Activity"
      dockerfile: dockerfile
    restart: always
    environment:
      input: github-data
      output: event-counts
      Quix__Broker__Address: redpanda:9092
    depends_on:
      - redpanda
  postgresql_writer:
    build:
      context: "./Postgres Writer"
      dockerfile: dockerfile
    restart: always
    environment:
      input: event-counts
      PG_HOST: postgresdb
      PG_PORT: 5432
      PG_USER: root
      PG_DATABASE: test_db
      PG_SCHEMA: public
      PG_TABLE: event_counts
      PG_PASSWORD: root
      Quix__Broker__Address: redpanda:9092
    depends_on:
      - postgresdb
      - redpanda
  data_api:
    build:
      context: "./Flask Web Gateway"
      dockerfile: dockerfile
    restart: always
    environment:
      PG_HOST: postgresdb
      PG_PORT: 5432
      PG_USER: root
      PG_DATABASE: test_db
      PG_SCHEMA: public
      PG_TABLE: event_counts
      PG_PASSWORD: root
      Quix__Broker__Address: redpanda:9092
    ports:
      - "8082:80"
    depends_on:
      - postgresdb
